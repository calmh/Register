.block
  %h3= t(:Statistics)
  .content
    %p
      = t(:Matched_x_students, :count => @students.length)
      - total = @students.length

    - age_intervals = {}
    - [ [0,7], [8,14], [15,20], [21,25], [26,99] ].each do |from, to|
      - from.upto(to) { |age| age_intervals[age] = "#{from}&#8209;#{to}&nbsp;" + t(:years) }

    - group_members = Hash.new(0)
    - genders = Hash.new(0)
    - ages = Hash.new(0)
    - board_positions = Hash.new(0)
    - club_positions = Hash.new(0)
    - main_interests = Hash.new(0)
    - titles = Hash.new(0)
    - @students.each do |student|
      - student.groups.each do |group|
        - group_members[group.identifier] += 1
      - genders[student.gender] += 1
      - ages[age_intervals[student.age]] += 1
      - board_positions[student.board_position.position] += 1
      - club_positions[student.club_position.position] += 1
      - main_interests[student.main_interest.category] += 1
      - titles[student.title.title] += 1

    = render :partial => 'statistics_table', :locals => { :col1 => t(:Group), :col2 => t(:Num_Students), :rows => group_members.to_a.sort, :total => total }
    = render :partial => 'statistics_table', :locals => { :col1 => t(:Gender), :col2 => t(:Num_Students), :rows => genders.to_a.sort, :total => total }
    = render :partial => 'statistics_table', :locals => { :col1 => t(:Age), :col2 => t(:Num_Students), :rows => ages.to_a.sort, :total => total }
    = render :partial => 'statistics_table', :locals => { :col1 => t(:Board_Position), :col2 => t(:Num_Students), :rows => board_positions.to_a.sort, :total => total }
    = render :partial => 'statistics_table', :locals => { :col1 => t(:Club_Position), :col2 => t(:Num_Students), :rows => club_positions.to_a.sort, :total => total }
    = render :partial => 'statistics_table', :locals => { :col1 => t(:Main_Interest), :col2 => t(:Num_Students), :rows => main_interests.to_a.sort, :total => total }
    = render :partial => 'statistics_table', :locals => { :col1 => t(:Title), :col2 => t(:Num_Students), :rows => titles.to_a.sort, :total => total }


